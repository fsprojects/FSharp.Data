name: 'Generate Test Coverage Report'
description: 'Build project, run tests with coverage collection, and generate coverage report'

runs:
  using: 'composite'
  steps:
    - name: Setup .NET Core 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.400

    - name: Restore .NET local tools
      shell: bash
      run: dotnet tool restore

    - name: Restore packages
      shell: bash
      run: dotnet paket restore

    - name: Build all projects
      shell: bash
      run: dotnet run --project build/build.fsproj -- -t Build

    - name: Install coverage collector globally
      shell: bash
      run: dotnet tool install -g dotnet-coverage || true

    - name: Run tests with coverage collection
      shell: bash
      run: |
        # Use .NET's built-in test runner directly with the available test projects
        dotnet test tests/FSharp.Data.Core.Tests/FSharp.Data.Core.Tests.fsproj \
          --collect:"Code Coverage" \
          --results-directory ./TestResults/ \
          --logger "console;verbosity=normal" \
          --no-build || true
        
        # Also try with coverlet if available
        dotnet test tests/FSharp.Data.Core.Tests/FSharp.Data.Core.Tests.fsproj \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=cobertura \
          /p:CoverletOutput=./TestResults/coverage.xml \
          --no-build || echo "Coverlet not available, using basic collection"

    - name: Install ReportGenerator tool (if not already available)
      shell: bash
      run: dotnet tool install -g dotnet-reportgenerator-globaltool || true

    - name: Generate coverage report
      shell: bash
      run: |
        # Try to find and process any coverage files that were generated
        if find TestResults -name "*.cobertura.xml" -o -name "*.xml" -o -name "*.coverage" | head -1 >/dev/null 2>&1; then
          echo "Found coverage files, generating report..."
          reportgenerator \
            -reports:"TestResults/**/*.cobertura.xml;TestResults/**/coverage.xml;TestResults/**/*.coverage" \
            -targetdir:"TestResults/CoverageReport" \
            -reporttypes:"Html;Cobertura;TextSummary" \
            -verbosity:Info || echo "Report generation failed, but continuing..."
        else
          echo "No coverage files found, creating basic summary..."
          mkdir -p TestResults/CoverageReport
          echo "No coverage data was successfully collected during this run." > TestResults/CoverageReport/Summary.txt
          echo "This may be due to missing coverage collection tools or configuration issues." >> TestResults/CoverageReport/Summary.txt
        fi

    - name: Display coverage summary
      shell: bash
      run: |
        echo "=== COVERAGE SUMMARY ==="
        if [ -f "TestResults/CoverageReport/Summary.txt" ]; then
          cat "TestResults/CoverageReport/Summary.txt"
        else
          echo "Coverage summary file not found"
        fi
        echo "========================"

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          TestResults/CoverageReport/
          TestResults/**/coverage.cobertura.xml
        retention-days: 30