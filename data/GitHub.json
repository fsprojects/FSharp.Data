[
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/879",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/879/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/879/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/879/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/879",
    "id": 109254988,
    "number": 879,
    "title": "Bug when call request from Http module",
    "user": {
      "login": "flypixel",
      "id": 14139485,
      "avatar_url": "https://avatars.githubusercontent.com/u/14139485?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flypixel",
      "html_url": "https://github.com/flypixel",
      "followers_url": "https://api.github.com/users/flypixel/followers",
      "following_url": "https://api.github.com/users/flypixel/following{/other_user}",
      "gists_url": "https://api.github.com/users/flypixel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flypixel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flypixel/subscriptions",
      "organizations_url": "https://api.github.com/users/flypixel/orgs",
      "repos_url": "https://api.github.com/users/flypixel/repos",
      "events_url": "https://api.github.com/users/flypixel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flypixel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-10-01T08:47:05Z",
    "updated_at": "2015-10-11T11:18:02Z",
    "closed_at": null,
    "body": "```fsharp\r\n[<LiteralAttribute>]\r\nlet url = \"http://www.staples.com/\"\r\nlet custom (req: System.Net.HttpWebRequest) = \r\n    req.Proxy <- new System.Net.WebProxy(\"http://XXX.XXX.XXX.XXX:8889\")\r\n    req\r\nlet page = Http.RequestString(url=url, customizeHttpRequest=custom)\r\n```\r\nand I get this exception in fsi:\r\n*System.ArgumentOutOfRangeException: Length cannot be less than zero.\r\nParameter name: length\r\n   at Microsoft.FSharp.Control.AsyncBuilderImpl.commit[a](Result`1 res)\r\n   at Microsoft.FSharp.Control.CancellationTokenOps.RunSynchronously[a](CancellationToken token, FSharpAsync`1 computation, FSharpOption`1 timeout)\r\n   at Microsoft.FSharp.Control.FSharpAsync.RunSynchronously[T](FSharpAsync`1 computation, FSharpOption`1 timeout, FSharpOption`1 cancellationToken)\r\n   at <StartupCode$FSI_0004>.$FSI_0004.main@() in ...\\HttpExperiment.fsx:line 42\r\nStopped due to error.*\r\nWhen I use standard *HttpWebRequest* for the same purposes, no exceptions were raised.\r\nP.S. There are sites where this exception wasn't raised in the same situation."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/878",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/878/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/878/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/878/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/878",
    "id": 108552574,
    "number": 878,
    "title": "Replace GitHub JsonProvider example with something else in ConsoleTests because of rate limit",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-27T18:35:57Z",
    "updated_at": "2015-09-27T18:36:03Z",
    "closed_at": null,
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/877",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/877/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/877/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/877/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/877",
    "id": 108552182,
    "number": 877,
    "title": "Header being considered as data row in HTMLProvider",
    "user": {
      "login": "ovatsus",
      "id": 738761,
      "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ovatsus",
      "html_url": "https://github.com/ovatsus",
      "followers_url": "https://api.github.com/users/ovatsus/followers",
      "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
      "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
      "organizations_url": "https://api.github.com/users/ovatsus/orgs",
      "repos_url": "https://api.github.com/users/ovatsus/repos",
      "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ovatsus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3",
      "html_url": "https://github.com/fsharp/FSharp.Data/milestones/Html%20Provider",
      "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3/labels",
      "id": 589161,
      "number": 3,
      "title": "Html Provider",
      "description": "",
      "creator": {
        "login": "ovatsus",
        "id": 738761,
        "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ovatsus",
        "html_url": "https://github.com/ovatsus",
        "followers_url": "https://api.github.com/users/ovatsus/followers",
        "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
        "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
        "organizations_url": "https://api.github.com/users/ovatsus/orgs",
        "repos_url": "https://api.github.com/users/ovatsus/repos",
        "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ovatsus/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 35,
      "state": "open",
      "created_at": "2014-03-06T09:37:42Z",
      "updated_at": "2015-09-27T18:36:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2015-09-27T18:26:25Z",
    "updated_at": "2015-09-27T18:36:28Z",
    "closed_at": null,
    "body": "https://en.wikipedia.org/wiki/List_of_Doctor_Who_serials\r\n\r\n    let doctorWho = new HtmlProvider<\"http://en.wikipedia.org/wiki/List_of_Doctor_Who_serials\">()\r\n    let row = doctorWho.Tables.Overview.Rows.[0]\r\n    val row : HtmlProvider<...>.Overview.Row =  (\"\", \"Season/Series\", \"Doctor(s)\", \"Serials\", \"Episodes\", \"First aired\",   \"Last aired\", \"Premiere\", \"Finale\", \"Average\")"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/874",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/874/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/874/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/874/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/874",
    "id": 106422617,
    "number": 874,
    "title": "XmlProvider throws up",
    "user": {
      "login": "ImaginaryDevelopment",
      "id": 121276,
      "avatar_url": "https://avatars.githubusercontent.com/u/121276?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ImaginaryDevelopment",
      "html_url": "https://github.com/ImaginaryDevelopment",
      "followers_url": "https://api.github.com/users/ImaginaryDevelopment/followers",
      "following_url": "https://api.github.com/users/ImaginaryDevelopment/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImaginaryDevelopment/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ImaginaryDevelopment/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImaginaryDevelopment/subscriptions",
      "organizations_url": "https://api.github.com/users/ImaginaryDevelopment/orgs",
      "repos_url": "https://api.github.com/users/ImaginaryDevelopment/repos",
      "events_url": "https://api.github.com/users/ImaginaryDevelopment/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ImaginaryDevelopment/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-14T20:35:53Z",
    "updated_at": "2015-09-14T20:36:57Z",
    "closed_at": null,
    "body": "When pointed at a large complex Xml file intellisense dies, autocomplete dies, the VisualStudio stops responding, and sometimes compilation just stops working with \r\n![image](https://cloud.githubusercontent.com/assets/121276/9860688/9fb88792-5afb-11e5-9453-d3edf2bc896d.png)\r\n\r\nafter trying to build, which never finishes it then switches to\r\n`The type provider 'ProviderImplementation.XmlProvider' reported an error: Cannot resolve dependency to assembly 'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' because it has not been preloaded. When using the ReflectionOnly APIs, dependent assemblies must be pre-loaded or loaded on demand through the ReflectionOnlyAssemblyResolve event.`\r\n\r\n![image](https://cloud.githubusercontent.com/assets/121276/9861027/c9962bf8-5afd-11e5-85f1-4edb43373d5c.png)\r\n\r\nI'm trying in the latest attempt to make a smaller sample string, instead of using the file itself as the type provider generation target.\r\n\r\nSystem.Xml is referenced from `C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\System.Xml.dll`\r\n\r\nThe target file is an 8Mb xml file from ftp://ftp.cdc.gov/pub/Health_Statistics/NCHS/Publications/ICD10CM/2015/ICD10CM_FY2015_Full_XML.zip\r\n\r\nthe entire code file is\r\n\r\n```\r\nnamespace Foo //Icd10LoadWithGems\r\nopen System\r\nopen FSharp.Data\r\n\r\nmodule Helpers = \r\n    let delimit delimiter (values:string seq) = String.Join(delimiter,values)\r\n    let replace (item:string) replace (s:string) = s.Replace(item,replace)\r\n    let combine basePath path = System.IO.Path.Combine(basePath,path)\r\n    let wrap wrapper s = wrapper + s + wrapper\r\n    let wrap2 left right s = left + s + right\r\nopen Helpers\r\n\r\n// not needed on current serialization path: [<CLIMutable>]\r\ntype Diagnosis = {Code:string;Desc:string}\r\n\r\ntype Template = {Id:string}\r\ntype Diagnosis' = {IcdCode:string;Diagnosis:string; ShortDescription:string;LongDescription:string; FullTextSearch:string;Templates:Template list}\r\ntype Diagnoses = {Diagnosis: Diagnosis' list}\r\ntype Column = {Name:string;IsMatch:bool}\r\n//[<NoComparison>]\r\n//type TableSpecifier = {TableName:string; HasIdentity:bool; Columns: Column seq; Values: string seq seq;}\r\nmodule GemLoader = \r\n    [<Literal>]\r\n    let drugPath = @\"C:\\ICD10CM_FY2015_Full_XML\\FY15_Tabular.xml\"\r\n\r\n// this is the code before I switched it to using the local sample string\r\ntype Icd10 = XmlProvider<GemLoader.drugPath, Global=true >\r\n//...\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/873",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/873/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/873/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/873/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/873",
    "id": 106334752,
    "number": 873,
    "title": "Fix HtmlInference inferListType when passing an empty seq",
    "user": {
      "login": "klettier",
      "id": 3425823,
      "avatar_url": "https://avatars.githubusercontent.com/u/3425823?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klettier",
      "html_url": "https://github.com/klettier",
      "followers_url": "https://api.github.com/users/klettier/followers",
      "following_url": "https://api.github.com/users/klettier/following{/other_user}",
      "gists_url": "https://api.github.com/users/klettier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klettier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klettier/subscriptions",
      "organizations_url": "https://api.github.com/users/klettier/orgs",
      "repos_url": "https://api.github.com/users/klettier/repos",
      "events_url": "https://api.github.com/users/klettier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klettier/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-09-14T12:56:40Z",
    "updated_at": "2015-09-16T14:58:08Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/873",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/873",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/873.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/873.patch"
    },
    "body": "When use createDefinitionListType function with description list (dl) containing no value the inferListType function throw an ArgumentException on \"Seq.reduce\" because input sequence is empty\r\nHere is a simple Html that reproduce the bug\r\n\r\n    <html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n      <body>\r\n        <dl>\r\n          <dt><a id=\"l1\" title=\"My link\" href=\"http://foo.com\" target=\"_blank\">Foo</a></dt>\r\n          <dt><a id=\"l2\" title=\"My link\" href=\"http://foo.com\" target=\"_blank\">Foo2</a></dt>\r\n        </dl>\r\n      </body>\r\n    </html>"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/872",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/872/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/872/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/872/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/872",
    "id": 105174359,
    "number": 872,
    "title": "CSV Provider Doesn't Quote Newline",
    "user": {
      "login": "nenono",
      "id": 5622786,
      "avatar_url": "https://avatars.githubusercontent.com/u/5622786?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nenono",
      "html_url": "https://github.com/nenono",
      "followers_url": "https://api.github.com/users/nenono/followers",
      "following_url": "https://api.github.com/users/nenono/following{/other_user}",
      "gists_url": "https://api.github.com/users/nenono/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nenono/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nenono/subscriptions",
      "organizations_url": "https://api.github.com/users/nenono/orgs",
      "repos_url": "https://api.github.com/users/nenono/repos",
      "events_url": "https://api.github.com/users/nenono/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nenono/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-09-07T08:44:05Z",
    "updated_at": "2015-09-07T11:21:08Z",
    "closed_at": null,
    "body": "When I tried to write CSV file that contains newlines in a cell. I expected the cell will be quoted by double-quotation. But it was not quoted.\r\n\r\n## Example(Console Application):\r\n```fsharp\r\nopen FSharp.Data\r\n\r\nmodule Provider =\r\n    [<Literal>]\r\n    let sample = \"\"\"Id,Text\r\n1,\"abc,\"\r\n2,\"def\r\nghi\"\r\n\"\"\"\r\n    type TestCsvProvider = CsvProvider<Sample=sample>\r\n\r\n[<EntryPoint>]\r\nlet main argv =\r\n    let rows =[\r\n        Provider.TestCsvProvider.Row(1, \"abc,\")\r\n        Provider.TestCsvProvider.Row(2, \"\"\"def\r\nghi\"\"\")\r\n    ]\r\n    use file = new Provider.TestCsvProvider ()\r\n    use file = file.Truncate 0\r\n    use file = file.Append rows\r\n    let actualText = file.SaveToString ()\r\n    printfn \"\"\"expected:\r\n%s\"\"\" Provider.sample\r\n    printfn \"\"\"actual:\r\n%s\"\"\" actualText \r\n    System.Console.ReadKey () |> ignore\r\n    0\r\n```\r\n\r\n## Output:\r\n```\r\nexpected:\r\nId,Text\r\n1,\"abc,\"\r\n2,\"def\r\nghi\"\r\n\r\nactual:\r\nId,Text\r\n1,\"abc,\"\r\n2,def\r\nghi\r\n```\r\nactual->\"def ghi\" cell is not quoted.\r\n\r\n## Environment:\r\n- Visual Studio 2013\r\n- .NET Framework 4.5\r\n- F# 3.1\r\n- FSharp.Data 2.2.5"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/871",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/871/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/871/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/871/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/871",
    "id": 102692641,
    "number": 871,
    "title": "CSV only supports UTF8 encoding",
    "user": {
      "login": "jackfoxy",
      "id": 1824476,
      "avatar_url": "https://avatars.githubusercontent.com/u/1824476?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackfoxy",
      "html_url": "https://github.com/jackfoxy",
      "followers_url": "https://api.github.com/users/jackfoxy/followers",
      "following_url": "https://api.github.com/users/jackfoxy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackfoxy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackfoxy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackfoxy/subscriptions",
      "organizations_url": "https://api.github.com/users/jackfoxy/orgs",
      "repos_url": "https://api.github.com/users/jackfoxy/repos",
      "events_url": "https://api.github.com/users/jackfoxy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackfoxy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-08-24T03:12:32Z",
    "updated_at": "2015-08-24T15:23:20Z",
    "closed_at": null,
    "body": "Pretty sure the problem referenced in this Gist https://gist.github.com/mitalkakaiya/18bc73acd69cee514a1c is because `StreamReader :> TextReader` constructed at line 227 in FSharp.Data.IO is always constructed with `Encoding.UTF8`. The reader skips big blocks of rows in the input file, starting after successfully reading line 10470 in the input file. \r\n\r\nDoes not seem to be a way for user to pass alternate character encoding."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/869",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/869/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/869/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/869/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/869",
    "id": 101914133,
    "number": 869,
    "title": "CsvProvider and missing columns",
    "user": {
      "login": "xkrt",
      "id": 428187,
      "avatar_url": "https://avatars.githubusercontent.com/u/428187?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xkrt",
      "html_url": "https://github.com/xkrt",
      "followers_url": "https://api.github.com/users/xkrt/followers",
      "following_url": "https://api.github.com/users/xkrt/following{/other_user}",
      "gists_url": "https://api.github.com/users/xkrt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xkrt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xkrt/subscriptions",
      "organizations_url": "https://api.github.com/users/xkrt/orgs",
      "repos_url": "https://api.github.com/users/xkrt/repos",
      "events_url": "https://api.github.com/users/xkrt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xkrt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-08-19T15:00:11Z",
    "updated_at": "2015-08-24T10:51:06Z",
    "closed_at": null,
    "body": "Hi, I have a problem with `CsvProvider` and my data, which may sometimes miss some columns (and I know what columns may be missed).\r\n\r\nCsv provider:\r\n```fsharp\r\n[<Literal>]\r\nlet inferSample = \"\"\"\r\n\"one\",\"two\",\"three\"\r\n42,\"hello\",3.14\"\"\"\r\n\r\ntype Csv = CsvProvider<inferSample, HasHeaders=true>\r\n```\r\n\r\nGood data sample, all columns as in `inferSample`. Everything works as expected.\r\n```fsharp\r\nlet goodSample = \"\"\"\r\n\"one\",\"two\",\"three\"\r\n1,\"world\",42.42\"\"\"\r\n\r\nCsv.Parse(goodSample).Rows |> Seq.iter (printfn \"%O\")\r\n```\r\n\r\nNot complete data, column `two` is completely missed:\r\n```fsharp\r\nlet missSample = \"\"\"\r\n\"one\",\"three\"\r\n1,42.42\"\"\"\r\n\r\nCsv.Parse(sample2).Rows |> Seq.iter (printfn \"%O\") // boom!\r\n```\r\n\r\nStack trace:\r\n```\r\nUnhandled Exception: System.Exception: Couldn't parse row 1 according to schema:\r\n Index was outside the bounds of the array.\r\n   at FSharp.Data.Runtime.CsvHelpers.parseIntoTypedRows@203-6.Invoke(String message) in C:\\Git\\FSharp.Data\\src\\Csv\\CsvRuntime.fs:line 203\r\n   at FSharp.Data.Runtime.CsvHelpers.parseIntoTypedRows@176.GenerateNext(IEnumerable`1& next) in C:\\Git\\FSharp.Data\\src\\Csv\\CsvRuntime.fs:line 203\r\n   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl()\r\n   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System-Collections-IEnumerator-MoveNext()\r\n   at Microsoft.FSharp.Collections.SeqModule.oneStepTo@1226[T](IEnumerable`1 source, List`1 prefix, FSharpRef`1 enumeratorR, Int32 i)\r\n   at Microsoft.FSharp.Collections.SeqModule.f@4277-2[T](IEnumerable`1 source, List`1 prefix, FSharpRef`1 enumeratorR, Int32 i, Unit unitVar0)\r\n   at Microsoft.FSharp.Collections.SeqModule.result@1242.Invoke(Int32 i)\r\n   at Microsoft.FSharp.Collections.IEnumerator.unfold@190.DoMoveNext(b& )\r\n   at Microsoft.FSharp.Collections.IEnumerator.MapEnumerator`1.System-Collections-IEnumerator-MoveNext()\r\n   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source)\r\n   at Program.main(String[] argv) in c:\\temp\\CsvProviderExpr\\CsvProviderExpr\\Program.fs:line 21\r\n```\r\n\r\nI tried to add `Schema=\"two=string option\"` with no luck.\r\nCan I somehow handle this case with `CsvProvider`?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/868",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/868/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/868/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/868/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/868",
    "id": 101845732,
    "number": 868,
    "title": "Reworked the xsdprovider code",
    "user": {
      "login": "runefs",
      "id": 183532,
      "avatar_url": "https://avatars.githubusercontent.com/u/183532?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runefs",
      "html_url": "https://github.com/runefs",
      "followers_url": "https://api.github.com/users/runefs/followers",
      "following_url": "https://api.github.com/users/runefs/following{/other_user}",
      "gists_url": "https://api.github.com/users/runefs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runefs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runefs/subscriptions",
      "organizations_url": "https://api.github.com/users/runefs/orgs",
      "repos_url": "https://api.github.com/users/runefs/repos",
      "events_url": "https://api.github.com/users/runefs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runefs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-08-19T09:28:54Z",
    "updated_at": "2015-09-02T18:26:59Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/868",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/868",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/868.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/868.patch"
    },
    "body": "I've reworked the original Xsd code since my original work was frankly a mess. It's somewhat cleaner now and more importantly uses compiled schema sets which should make for a more correct interpretation of the schemas."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/867",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/867/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/867/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/867/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/867",
    "id": 100563679,
    "number": 867,
    "title": "XmlProvider in 2.2.5 on F# 4 project causes multiple FSharp.Core assembly references",
    "user": {
      "login": "marklam",
      "id": 1962640,
      "avatar_url": "https://avatars.githubusercontent.com/u/1962640?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marklam",
      "html_url": "https://github.com/marklam",
      "followers_url": "https://api.github.com/users/marklam/followers",
      "following_url": "https://api.github.com/users/marklam/following{/other_user}",
      "gists_url": "https://api.github.com/users/marklam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marklam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marklam/subscriptions",
      "organizations_url": "https://api.github.com/users/marklam/orgs",
      "repos_url": "https://api.github.com/users/marklam/repos",
      "events_url": "https://api.github.com/users/marklam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marklam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-08-12T14:59:00Z",
    "updated_at": "2015-10-11T11:16:11Z",
    "closed_at": null,
    "body": "To repro:\r\nCreate an empty F# 4 Console app in VS2015\r\nAdd the FSharp.Data 2.2.5 package\r\nUse an Xml provided class:\r\n```\r\ntype FooXml = FSharp.Data.XmlProvider<\"\"\"<Root><Node><SubNode/></Node></Root>\"\"\">\r\n\r\n[<EntryPoint>]\r\nlet main _argv = \r\n    FooXml.Load(@\"c:\\temp\\foo.xml\").XElement.Attributes() |> Seq.length\r\n```\r\nLook at the Assembly references for the exe under ILSpy\r\n```\r\n// mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n// FSharp.Core, Version=4.4.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n// FSharp.Data, Version=2.2.5.0, Culture=neutral, PublicKeyToken=null\r\n// FSharp.Core, Version=4.3.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n// mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n// System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\r\n```\r\nThere are duplicate identical mscorlib references; and references to FSharp.Core 4.3.1 and 4.4.0"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/864",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/864/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/864/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/864/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/864",
    "id": 97148047,
    "number": 864,
    "title": "Json Parser upgrade?",
    "user": {
      "login": "mrange",
      "id": 2491891,
      "avatar_url": "https://avatars.githubusercontent.com/u/2491891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrange",
      "html_url": "https://github.com/mrange",
      "followers_url": "https://api.github.com/users/mrange/followers",
      "following_url": "https://api.github.com/users/mrange/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrange/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrange/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrange/subscriptions",
      "organizations_url": "https://api.github.com/users/mrange/orgs",
      "repos_url": "https://api.github.com/users/mrange/repos",
      "events_url": "https://api.github.com/users/mrange/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrange/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2015-07-24T21:11:07Z",
    "updated_at": "2015-07-25T16:11:47Z",
    "closed_at": null,
    "body": "Hi.\r\n\r\nDuring summer I have been working on an F# JSON parser with my goals of being 100% conforming as well as having decent performance. In addition parser failures should produce good error messages telling the user not only where it fails but also what was expected or unexpected.\r\n\r\nDuring my performance testings I found the parser to compare favorable to JSON.NET as well as FSharp.Data.\r\n\r\nA thought struck me, would a more conforming and faster parser be of interest to FSharp.Data.\r\n\r\nI did some experimentations of incorporating the parser into FSharp.Data and I got these performance numbers:\r\n\r\n```\r\nUsing *CURRENT* parser to parse JSON document 1000 times...\r\n  GitHub.json - 764 ms\r\n  WorldBank.json - 182 ms\r\n  allfalse.json - 67 ms\r\n  allnull.json - 56 ms\r\n  allnumber.json - 1656 ms\r\n  allstring.json - 200 ms\r\n  alltrue.json - 66 ms\r\n  charrefs-full.json - 1788 ms\r\n  charrefs.json - 1485 ms\r\n  topic.json - 1513 ms\r\nUsing *NEW* parser to parse JSON document 1000 times...\r\n  GitHub.json - 383 ms\r\n  WorldBank.json - 132 ms\r\n  allfalse.json - 57 ms\r\n  allnull.json - 48 ms\r\n  allnumber.json - 206 ms\r\n  allstring.json - 159 ms\r\n  alltrue.json - 56 ms\r\n  charrefs-full.json - 1235 ms\r\n  charrefs.json - 1079 ms\r\n  topic.json - 803 ms\r\n```\r\nWe see the performance improvement goes somewhere between 30% to 100% for realistic documents (all* documents are used to test specific parts of the parser)\r\n\r\nIn addition `dotTrace` reports that the proposed parser allocates 1/3 memory during test runs, 1600 MB compared to 4600 MB.\r\n\r\nAnother benefit is decent error messages ie:\r\n\r\n```\r\nFailed to parse input as JSON\r\n{\"x\":3.0,\"y\":}\r\n-------------^ Pos: 13\r\nExpected: '\"', '-', '[', '{', digit, false, null or true\r\n```\r\nNow for potential problems with upgrading the parser:\r\n\r\n1. Culture - The proposed parser doesn't support parsing numbers using a provided culture (the JSON spec says nothing of such AFAIK and it's problematic as the decimal delimiter is , in some cultures colliding with the list delimiter in JSON).\r\n1. Sample - The proposed parser doesn't support parsing partially correct documents\r\n1. Fault-tolerance - proposed parser doesn't support fault-tolerant mode\r\n1. Numbers - As JSON is JavaScript specific and JavaScript uses double for number representation the proposed parser only supports doubles (but I am more and more leaning towards decimal as then the parsing of numbers will be \"lossless\")\r\n1. Numbers - The proposed parser doesn't support trying to parse numbers as currency.\r\n\r\nSo as there are some differences which may introduce regressions. I would therefore be tempted to provide the parser as an alternative for the users that are after conformance and performance.\r\n\r\nIf you find this interesting you can check my [branch](https://github.com/mrange/FSharp.Data/tree/mrange/json_perf). The parser is migrated and I run it through some of the test cases but it's most certainly a \"Work In Progress\" right now.\r\n\r\nIf you don't find it interesting then no problem."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/863",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/863/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/863/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/863/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/863",
    "id": 97087827,
    "number": 863,
    "title": "Json Parser ambiguousness when parsing numbers using cultures",
    "user": {
      "login": "mrange",
      "id": 2491891,
      "avatar_url": "https://avatars.githubusercontent.com/u/2491891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrange",
      "html_url": "https://github.com/mrange",
      "followers_url": "https://api.github.com/users/mrange/followers",
      "following_url": "https://api.github.com/users/mrange/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrange/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrange/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrange/subscriptions",
      "organizations_url": "https://api.github.com/users/mrange/orgs",
      "repos_url": "https://api.github.com/users/mrange/repos",
      "events_url": "https://api.github.com/users/mrange/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrange/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2015-07-24T16:27:54Z",
    "updated_at": "2015-07-25T09:14:56Z",
    "closed_at": null,
    "body": "As the json parser supports parsing numbers according to the current culture what is the reasonable behavior of the following code (swedish culture uses ',' as decimal delimiter)?\r\n\r\n```\r\nlet j = JsonValue.Parse(\"[25,5,5,25]\", CultureInfo.GetCultureInfo \"sv-SE\")\r\n```\r\n\r\nIt seems to crash currently but I am unsure what would make sense.\r\n\r\nThe following code also seems to crash:\r\n\r\n ```\r\nlet j = JsonValue.Parse(\"{ \\\"age\\\": 25,5, \\\"id\\\":0}\", CultureInfo.GetCultureInfo \"sv-SE\")\r\n```\r\nIf one goes by the letter of the law (json.org) the answer seems easy (don't support cultures) but in reality removing features are always hard.\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/861",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/861/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/861/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/861/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/861",
    "id": 95498057,
    "number": 861,
    "title": "How to get only inner text from an HtmlNode?",
    "user": {
      "login": "xperiandri",
      "id": 2365592,
      "avatar_url": "https://avatars.githubusercontent.com/u/2365592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xperiandri",
      "html_url": "https://github.com/xperiandri",
      "followers_url": "https://api.github.com/users/xperiandri/followers",
      "following_url": "https://api.github.com/users/xperiandri/following{/other_user}",
      "gists_url": "https://api.github.com/users/xperiandri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xperiandri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xperiandri/subscriptions",
      "organizations_url": "https://api.github.com/users/xperiandri/orgs",
      "repos_url": "https://api.github.com/users/xperiandri/repos",
      "events_url": "https://api.github.com/users/xperiandri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xperiandri/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-07-16T18:38:47Z",
    "updated_at": "2015-07-16T20:26:25Z",
    "closed_at": null,
    "body": "I have such HTML\r\n```HTML\r\n<div class=\"matchheader\">\r\n    <div class=\"whenm\">\r\n        21 minutes ago\r\n        <span style=\"color: rgb(114, 163, 38); font-weight: bold; text-shadow: 1px 1px 0px #4a7010;\"> LIVE</span>\r\n        <span style=\"color: rgb(209, 33, 33); font-weight: bold;\">&nbsp;&nbsp;</span>\r\n    </div>\r\n    <div class=\"eventm\">Do Gaming League</div>\r\n</div>\r\n```\r\nAnd I want to extract ```21 minutes ago``` from it.\r\nBut ```InnerText()``` returns ```21 minutes ago LIVEÂ Â \"``` instead.\r\n\r\nHow to eliminate span elements from inner text?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/848",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/848/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/848/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/848/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/848",
    "id": 89157343,
    "number": 848,
    "title": "Update Http.fs with more cookie changes",
    "user": {
      "login": "xenocons",
      "id": 3858449,
      "avatar_url": "https://avatars.githubusercontent.com/u/3858449?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xenocons",
      "html_url": "https://github.com/xenocons",
      "followers_url": "https://api.github.com/users/xenocons/followers",
      "following_url": "https://api.github.com/users/xenocons/following{/other_user}",
      "gists_url": "https://api.github.com/users/xenocons/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xenocons/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xenocons/subscriptions",
      "organizations_url": "https://api.github.com/users/xenocons/orgs",
      "repos_url": "https://api.github.com/users/xenocons/repos",
      "events_url": "https://api.github.com/users/xenocons/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xenocons/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-06-18T00:06:27Z",
    "updated_at": "2015-07-12T14:24:35Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/848",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/848",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/848.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/848.patch"
    },
    "body": "I am not sure what this could break, but basically its just relaxing how the cookie parsing works, this might be a band-aid, but it stops an exception when using SubString with -1"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/844",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/844/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/844/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/844/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/844",
    "id": 87016318,
    "number": 844,
    "title": "F# interactive error: TypeProviderAssemblyAttribute refers to FSharp.Data.DesignTime",
    "user": {
      "login": "iainnicol",
      "id": 2117362,
      "avatar_url": "https://avatars.githubusercontent.com/u/2117362?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iainnicol",
      "html_url": "https://github.com/iainnicol",
      "followers_url": "https://api.github.com/users/iainnicol/followers",
      "following_url": "https://api.github.com/users/iainnicol/following{/other_user}",
      "gists_url": "https://api.github.com/users/iainnicol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iainnicol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iainnicol/subscriptions",
      "organizations_url": "https://api.github.com/users/iainnicol/orgs",
      "repos_url": "https://api.github.com/users/iainnicol/repos",
      "events_url": "https://api.github.com/users/iainnicol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iainnicol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-06-10T15:53:28Z",
    "updated_at": "2015-06-10T15:53:28Z",
    "closed_at": null,
    "body": "Create a new F# project and add FSharp.Data from Nuget.\r\n\r\nNext, create an fsx script:\r\n```\r\n#I \"bin/Debug\"\r\n#r \"FSharp.Data.dll\"\r\nopen FSharp.Data.CsvExtensions\r\n\r\nmodule Main =\r\n    let main () = ()\r\nMain.main ()\r\n```\r\n\r\nSend the script to the F# interactive window (using alt+enter).  Then you get the following error message:\r\n\r\n```Script1.fsx(2,1): error FS3031: The type provider 'C:\\Users\\Foo\\Documents\\Visual Studio 2015\\Projects\\fsharpdata\\fsharpdata\\bin/Debug\\FSharp.Data.dll' reported an error: Assembly attribute 'TypeProviderAssemblyAttribute' refers to a designer assembly 'FSharp.Data.DesignTime' which cannot be loaded or doesn't exist. Could not load file or assembly 'file:///C:\\Users\\Foo\\Documents\\Visual Studio 2015\\Projects\\fsharpdata\\fsharpdata\\bin\\Debug\\FSharp.Data.DesignTime.dll' or one of its dependencies. The system cannot find the file specified.```\r\n\r\nWeirdly, this error doesn't happen if you send the script to the F# interactive window again.\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/838",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/838/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/838/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/838/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/838",
    "id": 85411984,
    "number": 838,
    "title": "Add PreferFloats static param to CsvProvider",
    "user": {
      "login": "ranigb",
      "id": 12262288,
      "avatar_url": "https://avatars.githubusercontent.com/u/12262288?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ranigb",
      "html_url": "https://github.com/ranigb",
      "followers_url": "https://api.github.com/users/ranigb/followers",
      "following_url": "https://api.github.com/users/ranigb/following{/other_user}",
      "gists_url": "https://api.github.com/users/ranigb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ranigb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ranigb/subscriptions",
      "organizations_url": "https://api.github.com/users/ranigb/orgs",
      "repos_url": "https://api.github.com/users/ranigb/repos",
      "events_url": "https://api.github.com/users/ranigb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ranigb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 9,
    "created_at": "2015-06-05T04:06:04Z",
    "updated_at": "2015-06-08T08:57:31Z",
    "closed_at": null,
    "body": "There is a consistency issue between the default way decimals are printed and the way they are inferred. Values like 1.8, -2.22, 3.4 will be inferred to be Decimal. However if you printf \"%a\" these values, they will be represented as 1.8M, -2.22M, 3.4M. Reading them again will result in strings instead of decimals. It would be nice if there could be more consistency.\r\n\r\nThere are several solutions I can think of  each one of them with pros and cons:\r\n1. The type of numbers ending with M could be inferred to be Decimal\r\n2. numbers like 1.8, -2.22, 3.4 can be inferred to be floats\r\n3. we can allow the user to select what to do in case of ambiguity. For example a columns that contains 1.8, 2.3, 5.6 can be converted to strings, floats and decimals. The current default is to convert them to decimals but we can allow the user to specify that in such cases floats are preferred.\r\n4. there are probably many other ways in which in can be resolved\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/834",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/834/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/834/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/834/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/834",
    "id": 82942774,
    "number": 834,
    "title": "IndexOutOfRangeException for Expires cookie with no comma",
    "user": {
      "login": "Jeff-Cortese",
      "id": 8184497,
      "avatar_url": "https://avatars.githubusercontent.com/u/8184497?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jeff-Cortese",
      "html_url": "https://github.com/Jeff-Cortese",
      "followers_url": "https://api.github.com/users/Jeff-Cortese/followers",
      "following_url": "https://api.github.com/users/Jeff-Cortese/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jeff-Cortese/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jeff-Cortese/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jeff-Cortese/subscriptions",
      "organizations_url": "https://api.github.com/users/Jeff-Cortese/orgs",
      "repos_url": "https://api.github.com/users/Jeff-Cortese/repos",
      "events_url": "https://api.github.com/users/Jeff-Cortese/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jeff-Cortese/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-30T23:26:45Z",
    "updated_at": "2015-06-07T18:16:40Z",
    "closed_at": null,
    "body": "When calling any of the `Request` functions, an `IndexOutOfRangeException` is thrown when a response has a `\"Set-Cookie\"` header with an `Expires` cookie that does _not_ have a comma.\r\n\r\nFor example:\r\n`\"s=123xyz; path=/; HttpOnly; Expires=2015-05-30T19:05:43.606-05:00\"`\r\n\r\nIdeally, in the case where a server uses a different date format, this cookie string would still be parsed."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/831",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/831/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/831/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/831/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/831",
    "id": 75702278,
    "number": 831,
    "title": "Who can help me turn code that reads SAS files into a TypeProvider?",
    "user": {
      "login": "gjvdkamp",
      "id": 2719128,
      "avatar_url": "https://avatars.githubusercontent.com/u/2719128?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gjvdkamp",
      "html_url": "https://github.com/gjvdkamp",
      "followers_url": "https://api.github.com/users/gjvdkamp/followers",
      "following_url": "https://api.github.com/users/gjvdkamp/following{/other_user}",
      "gists_url": "https://api.github.com/users/gjvdkamp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gjvdkamp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gjvdkamp/subscriptions",
      "organizations_url": "https://api.github.com/users/gjvdkamp/orgs",
      "repos_url": "https://api.github.com/users/gjvdkamp/repos",
      "events_url": "https://api.github.com/users/gjvdkamp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gjvdkamp/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2015-05-12T18:53:56Z",
    "updated_at": "2015-05-12T21:21:58Z",
    "closed_at": null,
    "body": "Hi all, \r\n\r\nA while ago I wrote some code that can natively read SAS files (without having to have any SAS software on your computer). If you work in finance, risk, statistics etc SAS is used quite a lot. I used [Matt Shotwell](http://biostatmatt.com/uploads/shotwell-sas7bdat-useR-2011.pdf)'s description of the file format. \r\n\r\nIf reads the metadata and generates code that then reads the files. My original idea was to write a TypeProvider but that has remained elusive. I can imagine this would be walk in the park for most of you. If any of you is interested I can send/pull the code and we can team up to open up SAS to F#. \r\n\r\nGert-Jan"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/824",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/824/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/824/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/824/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/824",
    "id": 74268748,
    "number": 824,
    "title": "CSV Type Provider doesn't process lines after an error line",
    "user": {
      "login": "misterspeedy",
      "id": 800686,
      "avatar_url": "https://avatars.githubusercontent.com/u/800686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/misterspeedy",
      "html_url": "https://github.com/misterspeedy",
      "followers_url": "https://api.github.com/users/misterspeedy/followers",
      "following_url": "https://api.github.com/users/misterspeedy/following{/other_user}",
      "gists_url": "https://api.github.com/users/misterspeedy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/misterspeedy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/misterspeedy/subscriptions",
      "organizations_url": "https://api.github.com/users/misterspeedy/orgs",
      "repos_url": "https://api.github.com/users/misterspeedy/repos",
      "events_url": "https://api.github.com/users/misterspeedy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/misterspeedy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2015-05-08T07:40:56Z",
    "updated_at": "2015-06-07T21:20:57Z",
    "closed_at": null,
    "body": "When the CSV Type Provider (with IgnoreErrors turned on) encounters a line containing, for example, an odd number of double-quotes, it only produces data for the preceding lines.  Any following lines which are valid are not returned."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/818",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/818/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/818/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/818/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/818",
    "id": 69698263,
    "number": 818,
    "title": "XmlProvider captures current directory at design time",
    "user": {
      "login": "kkm000",
      "id": 8228229,
      "avatar_url": "https://avatars.githubusercontent.com/u/8228229?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kkm000",
      "html_url": "https://github.com/kkm000",
      "followers_url": "https://api.github.com/users/kkm000/followers",
      "following_url": "https://api.github.com/users/kkm000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kkm000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kkm000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kkm000/subscriptions",
      "organizations_url": "https://api.github.com/users/kkm000/orgs",
      "repos_url": "https://api.github.com/users/kkm000/repos",
      "events_url": "https://api.github.com/users/kkm000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kkm000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-04-20T22:47:43Z",
    "updated_at": "2015-04-21T07:31:34Z",
    "closed_at": null,
    "body": "When compiling in Visual Studio 2013, FSharp.Data version=\"2.2.0\" targetFramework=\"net45\".\r\n\r\nThis works only when `foo.xml` is in the same directory where the executable file built. Runtime current directory seems not to have any effect. Setting \"Working directory\" in project properties or changing the current directory with `Directory.SetCurrentDirectory` is ignored.\r\n```f#\r\ntype NamesDotXml = XmlProvider<\"<items><item weight='10'>James</item></items>\">\r\nlet loadNames (filename:string) =  NamesDotXml.Load(filename).Items\r\nlet n = loadNames(\"foo.xml\")\r\n```\r\n\r\nWorkaround, this works as expected, `foo.xml` is correctly found in the current directory. Both the Working Directory project setting and a runtime change with `Directory.SetCurrentDirectory` are respected:\r\n```f#\r\ntype NamesDotXml = XmlProvider<\"<items><item weight='10'>James</item></items>\">\r\nlet loadNames (filename:string) =  NamesDotXml.Load(System.IO.File.OpenText(filename)).Items\r\nlet n = loadNames(\"foo.xml\")\r\n```"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/817",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/817/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/817/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/817/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/817",
    "id": 69605192,
    "number": 817,
    "title": "[HTML provider] Problems with emails",
    "user": {
      "login": "Seanseviltwin",
      "id": 998854,
      "avatar_url": "https://avatars.githubusercontent.com/u/998854?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Seanseviltwin",
      "html_url": "https://github.com/Seanseviltwin",
      "followers_url": "https://api.github.com/users/Seanseviltwin/followers",
      "following_url": "https://api.github.com/users/Seanseviltwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Seanseviltwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Seanseviltwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Seanseviltwin/subscriptions",
      "organizations_url": "https://api.github.com/users/Seanseviltwin/orgs",
      "repos_url": "https://api.github.com/users/Seanseviltwin/repos",
      "events_url": "https://api.github.com/users/Seanseviltwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Seanseviltwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3",
      "html_url": "https://github.com/fsharp/FSharp.Data/milestones/Html%20Provider",
      "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3/labels",
      "id": 589161,
      "number": 3,
      "title": "Html Provider",
      "description": "",
      "creator": {
        "login": "ovatsus",
        "id": 738761,
        "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ovatsus",
        "html_url": "https://github.com/ovatsus",
        "followers_url": "https://api.github.com/users/ovatsus/followers",
        "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
        "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
        "organizations_url": "https://api.github.com/users/ovatsus/orgs",
        "repos_url": "https://api.github.com/users/ovatsus/repos",
        "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ovatsus/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 35,
      "state": "open",
      "created_at": "2014-03-06T09:37:42Z",
      "updated_at": "2015-09-27T18:36:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 4,
    "created_at": "2015-04-20T14:52:44Z",
    "updated_at": "2015-04-21T08:02:51Z",
    "closed_at": null,
    "body": "I think it's caused by the mailto attribute or the @ or :+1: symbol inside it. When you try to get the inner text of an \"a\" tag with a mailto attribute, you get incomprehensible gibberish.\r\nGoing to give fixing this a go."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/811",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/811/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/811/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/811/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/811",
    "id": 65324034,
    "number": 811,
    "title": "Add support to HTTP Utility for multipart/form-data",
    "user": {
      "login": "tonyj444",
      "id": 7260674,
      "avatar_url": "https://avatars.githubusercontent.com/u/7260674?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonyj444",
      "html_url": "https://github.com/tonyj444",
      "followers_url": "https://api.github.com/users/tonyj444/followers",
      "following_url": "https://api.github.com/users/tonyj444/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonyj444/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonyj444/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonyj444/subscriptions",
      "organizations_url": "https://api.github.com/users/tonyj444/orgs",
      "repos_url": "https://api.github.com/users/tonyj444/repos",
      "events_url": "https://api.github.com/users/tonyj444/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonyj444/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-30T23:04:19Z",
    "updated_at": "2015-05-09T10:08:18Z",
    "closed_at": null,
    "body": "I have been trying to use the Http Utility to post data to a REST API which requires the upload of both key-value pairs (FormValues) in addition to a byte stream.  As far as I'm aware the only way to achieve this in a single post is to use the multipart/form-data content-type as detailed here:  http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\r\n\r\nIt looks as though this would be best achieved by expanding the HttpRequestBody DU.  Does this sound like the most sensible approach and would there be interest in this feature?"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/809",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/809/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/809/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/809/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/809",
    "id": 64940226,
    "number": 809,
    "title": "Access tables in HTML Type Provider by index",
    "user": {
      "login": "isaacabraham",
      "id": 1781813,
      "avatar_url": "https://avatars.githubusercontent.com/u/1781813?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isaacabraham",
      "html_url": "https://github.com/isaacabraham",
      "followers_url": "https://api.github.com/users/isaacabraham/followers",
      "following_url": "https://api.github.com/users/isaacabraham/following{/other_user}",
      "gists_url": "https://api.github.com/users/isaacabraham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isaacabraham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isaacabraham/subscriptions",
      "organizations_url": "https://api.github.com/users/isaacabraham/orgs",
      "repos_url": "https://api.github.com/users/isaacabraham/repos",
      "events_url": "https://api.github.com/users/isaacabraham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isaacabraham/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3",
      "html_url": "https://github.com/fsharp/FSharp.Data/milestones/Html%20Provider",
      "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/3/labels",
      "id": 589161,
      "number": 3,
      "title": "Html Provider",
      "description": "",
      "creator": {
        "login": "ovatsus",
        "id": 738761,
        "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ovatsus",
        "html_url": "https://github.com/ovatsus",
        "followers_url": "https://api.github.com/users/ovatsus/followers",
        "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
        "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
        "organizations_url": "https://api.github.com/users/ovatsus/orgs",
        "repos_url": "https://api.github.com/users/ovatsus/repos",
        "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ovatsus/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 8,
      "closed_issues": 35,
      "state": "open",
      "created_at": "2014-03-06T09:37:42Z",
      "updated_at": "2015-09-27T18:36:28Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2015-03-28T12:55:27Z",
    "updated_at": "2015-03-28T13:02:55Z",
    "closed_at": null,
    "body": "Currently you can only access tables by the \"name\" of the table; there are cases where you have data in several pages that have the same \"schema\" of table but the name differs e.g.\r\n\r\nhttp://kassiesa.home.xs4all.nl/bert/uefa/data/method4/match2014.html\r\nhttp://kassiesa.home.xs4all.nl/bert/uefa/data/method4/match2013.html\r\nhttp://kassiesa.home.xs4all.nl/bert/uefa/data/method4/match2012.html\r\n\r\ne.g.\r\n\r\n```fsharp\r\n   type ResultData = HtmlProvider< @\"http://kassiesa.home.xs4all.nl/bert/uefa/data/method4/match2014.html\">\r\n\r\n    ResultData.GetSample()\r\n          .Tables\r\n          .``UEFA European Cup Matches 2013/2014`` // <- this bit should be .[1] etc. ```"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/805",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/805/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/805/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/805/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/805",
    "id": 63508336,
    "number": 805,
    "title": "Pagination in the JSON type provider ",
    "user": {
      "login": "forki",
      "id": 57396,
      "avatar_url": "https://avatars.githubusercontent.com/u/57396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/forki",
      "html_url": "https://github.com/forki",
      "followers_url": "https://api.github.com/users/forki/followers",
      "following_url": "https://api.github.com/users/forki/following{/other_user}",
      "gists_url": "https://api.github.com/users/forki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/forki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/forki/subscriptions",
      "organizations_url": "https://api.github.com/users/forki/orgs",
      "repos_url": "https://api.github.com/users/forki/repos",
      "events_url": "https://api.github.com/users/forki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/forki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-22T08:33:45Z",
    "updated_at": "2015-03-22T14:01:30Z",
    "closed_at": null,
    "body": "In http://www.navision-blog.de/blog/2014/10/14/retrieving-github-download-counts/ I try to get github download stats by using the JSON type provider. It only shows recent download stats. I assume there is some pagination needed. Is this something that the JSON type provider should do automatically? "
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/803",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/803/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/803/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/803/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/803",
    "id": 62461667,
    "number": 803,
    "title": "[WIP] Adds support for fixed width file",
    "user": {
      "login": "colinbull",
      "id": 585546,
      "avatar_url": "https://avatars.githubusercontent.com/u/585546?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinbull",
      "html_url": "https://github.com/colinbull",
      "followers_url": "https://api.github.com/users/colinbull/followers",
      "following_url": "https://api.github.com/users/colinbull/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinbull/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinbull/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinbull/subscriptions",
      "organizations_url": "https://api.github.com/users/colinbull/orgs",
      "repos_url": "https://api.github.com/users/colinbull/repos",
      "events_url": "https://api.github.com/users/colinbull/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinbull/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2015-03-17T17:08:34Z",
    "updated_at": "2015-07-12T14:24:35Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/803",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/803",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/803.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/803.patch"
    },
    "body": "This adds support for fixed width file formats, the motivation for this comes from #801. It basically adds a `FixedWidthReader` module and then reuses the CSV provider. The original discussion in #801, said to pull this out into another provider, but because the only difference is really the file iterator, so this is now just parameterized see [here](https://github.com/fsharp/FSharp.Data/blob/a81885c72c097c621307fa64289ebc884356e450/src/Csv/CsvRuntime.fs#L310). Otherwise a lot of duplicated code would be produced.\r\n\r\nTo switch the provider into _FixedWidthMode_ a static parameter has been added.\r\n\r\n      CsvProvider<\"Data/nyse.txt\", HasHeaders=false, FixedWidth=true>\r\n\r\nIt would be nice to have more examples of fixed width files that we can test against before we release this, a currently the only one is the small snippet @dsyme gave. "
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/802",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/802/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/802/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/802/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/802",
    "id": 62331679,
    "number": 802,
    "title": "How to change the time-out value of request in HTTP Utilities",
    "user": {
      "login": "darting",
      "id": 4946661,
      "avatar_url": "https://avatars.githubusercontent.com/u/4946661?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darting",
      "html_url": "https://github.com/darting",
      "followers_url": "https://api.github.com/users/darting/followers",
      "following_url": "https://api.github.com/users/darting/following{/other_user}",
      "gists_url": "https://api.github.com/users/darting/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darting/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darting/subscriptions",
      "organizations_url": "https://api.github.com/users/darting/orgs",
      "repos_url": "https://api.github.com/users/darting/repos",
      "events_url": "https://api.github.com/users/darting/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darting/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      },
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/up-for-grabs",
        "name": "up-for-grabs",
        "color": "207de5"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-03-17T08:51:04Z",
    "updated_at": "2015-03-21T13:17:44Z",
    "closed_at": null,
    "body": "Hi all, \r\n\r\nhow can I change the time-out value of request? I can not find any documentation. \r\n\r\nthank you very much\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/801",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/801/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/801/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/801/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/801",
    "id": 62058831,
    "number": 801,
    "title": "Extend CSV to support fixed column size files?",
    "user": {
      "login": "dsyme",
      "id": 7204669,
      "avatar_url": "https://avatars.githubusercontent.com/u/7204669?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsyme",
      "html_url": "https://github.com/dsyme",
      "followers_url": "https://api.github.com/users/dsyme/followers",
      "following_url": "https://api.github.com/users/dsyme/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsyme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsyme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsyme/subscriptions",
      "organizations_url": "https://api.github.com/users/dsyme/orgs",
      "repos_url": "https://api.github.com/users/dsyme/repos",
      "events_url": "https://api.github.com/users/dsyme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsyme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-new-feature",
        "name": "type-new-feature",
        "color": "AA00A2"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2015-03-16T12:06:18Z",
    "updated_at": "2015-05-20T05:56:26Z",
    "closed_at": null,
    "body": "Hi all,\r\n\r\nI was looking at [these samples of intra-day trading prices form the NYSE](ftp://ftp.nyxdata.com/Historical%20Data%20Samples/Daily%20TAQ/) which someone pointed me to.\r\n\r\nOne of the files containing the master list of stocks contains this.  The first and second columns are fixed size, the third is variable.\r\n\r\nI'm wondering if the CSV reader might support this case.  It's not hard to parse manually of course.\r\n\r\nThis is just a suggestion, feel free to close it pending further requests for this functionality (perhaps it's been requested before too)\r\n\r\n```\r\n 00846U1010000A           A              AGILENT TECHNOLOGIES, INC                                   41726005508L 000011999111820051228000000000000000010   00  A           Y114A03307920000001D119991118101  11111                                       \r\n 0138171010000AA          AA             ALCOA INC                                                   41726005508A 000011999010420100420000000000000000010   00  AA          Y130A10696020000001D119510611101  11111                                       \r\n 00768Y2060020AADR        AADR           ADVISORSHARES TR WCM/BNY MELLON FOCUSED GROWTH ARD ETF      400000000    000012010072120091023000000000000000010   05  AADR        N416A00002000000100B720100721000  10010                                       \r\n...\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/794",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/794/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/794/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/794/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/pull/794",
    "id": 60344830,
    "number": 794,
    "title": "[WIP] Support for nested types in tables, lists and schema.org",
    "user": {
      "login": "colinbull",
      "id": 585546,
      "avatar_url": "https://avatars.githubusercontent.com/u/585546?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinbull",
      "html_url": "https://github.com/colinbull",
      "followers_url": "https://api.github.com/users/colinbull/followers",
      "following_url": "https://api.github.com/users/colinbull/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinbull/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinbull/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinbull/subscriptions",
      "organizations_url": "https://api.github.com/users/colinbull/orgs",
      "repos_url": "https://api.github.com/users/colinbull/repos",
      "events_url": "https://api.github.com/users/colinbull/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinbull/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-03-09T13:46:32Z",
    "updated_at": "2015-07-12T14:24:35Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/pulls/794",
      "html_url": "https://github.com/fsharp/FSharp.Data/pull/794",
      "diff_url": "https://github.com/fsharp/FSharp.Data/pull/794.diff",
      "patch_url": "https://github.com/fsharp/FSharp.Data/pull/794.patch"
    },
    "body": "This PR is still very much a WIP but I wanted to give some visibility and get some feedback as to where I'm at. This PR adds support for nested html structures. Specifically Table within Tables and List within Tables and also basic support for any types defined using schema.org attributes `itemscope`, `itemtype` and `itemprop`.\r\n\r\nThings still left to do, \r\n\r\n* The HTML Generator, is currently a copy of the XML Generator as I wasn't sure whether any changes would be necessary. However I don't think there are and we could probably just write a transform to take the HTML generated tree and turn it into an XElement and just re-use the XML Generator / inference.\r\n* Schema.org is still a work in progress. \r\n* UoM support needs to be re-introduced, although I don't think the XML provider currently supports UoM anyway. \r\n* Nested List's don't have brilliant support at the minute. I'm pretty sure this could be made better.\r\n\r\nThings we could add in the future.\r\n* We could add a general DOM type which allowed navigation of the entire HTML document.  \r\n* Img's and anchors could have a type with a download method.\r\n\r\nAnyway, Here is an example of what is supported so far: \r\n\r\n\tlet [<Literal>] data= \r\n\t\t\"\"\"<html>\r\n\t\t\t   <body>\r\n\t\t\t\t   <table>\r\n\t\t\t\t\t   <tr>\r\n\t\t\t\t\t\t\t<td>Date</td>\r\n\t\t\t\t\t\t\t<td>Distance (m)</td>\r\n\t\t\t\t\t\t\t<td>Time (s)</td>\r\n\t\t\t\t\t\t\t<td>Column 3</td>\r\n\t\t\t\t\t\t\t<td>Column 4</td>\r\n\t\t\t\t\t\t\t<td>Results</td>\r\n\t\t\t\t\t   </tr>\r\n\t\t\t\t\t   <tr>\r\n\t\t\t\t\t\t   <td>01/01/2013 12:00</td>\r\n\t\t\t\t\t\t   <td>2</td><td>30.5</td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t   <div itemscope itemtype =\"http://schema.org/Movie\">\r\n\t\t\t\t\t\t\t\t <h1 itemprop=\"name\">Avatar</h1>\r\n\t\t\t\t\t\t\t\t <div itemprop=\"director\" itemscope itemtype=\"http://schema.org/Person\">\r\n\t\t\t\t\t\t\t\t Director: <span itemprop=\"name\">James Cameron</span> (born <span itemprop=\"birthDate\">August 16, 1954 </span>)\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t <span itemprop=\"genre\">Science fiction / Blue People</span>\r\n\t\t\t\t\t\t\t\t <a href=\"../movies/avatar-theatrical-trailer.html\" itemprop=\"trailer\">Trailer</a>\r\n\t\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>TimePoint</th><th>Value</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>1</td><td>1.234</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>2</td><td>8.67</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t   </tr>\r\n\t\t\t\t\t   <tr>\r\n\t\t\t\t\t\t   <td>01/01/2013 12:00</td>\r\n\t\t\t\t\t\t   <td>1.5</td>\r\n\t\t\t\t\t\t   <td>30.5</td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t   <div itemscope itemtype =\"http://schema.org/Movie\">\r\n\t\t\t\t\t\t\t\t <h1 itemprop=\"name\">Alien</h1>\r\n\t\t\t\t\t\t\t\t <div itemprop=\"director\" itemscope itemtype=\"http://schema.org/Person\">\r\n\t\t\t\t\t\t\t\t Director: <span itemprop=\"name\">James Cameron</span> (born <span itemprop=\"birthDate\">August 17, 1954 </span>)\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t <span itemprop=\"genre\">Science fiction</span>\r\n\t\t\t\t\t\t\t\t <a href=\"../movies/avatar-theatrical-trailer.html\" itemprop=\"trailer\">Trailer</a>\r\n\t\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t\t   <div itemscope itemtype=\"http://schema.org/rating\">\r\n\t\t\t\t\t\t\t\t  <div  itemprop=\"val\">\r\n\t\t\t\t\t\t\t\t\t<meta value=\"8\" />\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t   </div>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t\t<li>1</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t\t   <td>\r\n\t\t\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th>TimePoint</th><th>Value</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>1</td><td>1.234</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>2</td><td>8.67</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t   </td>\r\n\t\t\t\t\t   </tr>\r\n\t\t\t\t   </table>\r\n\t\t\t   </body>\r\n\t\t   </html>\"\"\"\r\n\r\n\tlet table1 = HtmlProvider<data>.GetSample().Tables.Table1\r\n\tlet headers = table1.Headers\r\n\tlet date = table1.Rows |> Seq.map (fun x -> x.Date) |> Seq.toList\r\n\tlet movieName = table1.Rows |> Seq.map (fun x -> x.Column3.Movie.Director.Person.BirthDate) |> Seq.toList\r\n\tlet nestedTables = table1.Rows |> Seq.collect (fun x -> x.Results.Table.Rows |> Seq.map (fun r -> r.Value)) |> Seq.toList     "
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/776",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/776/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/776/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/776/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/776",
    "id": 54803181,
    "number": 776,
    "title": "XsdProvider fails on Mac",
    "user": {
      "login": "object",
      "id": 252126,
      "avatar_url": "https://avatars.githubusercontent.com/u/252126?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/object",
      "html_url": "https://github.com/object",
      "followers_url": "https://api.github.com/users/object/followers",
      "following_url": "https://api.github.com/users/object/following{/other_user}",
      "gists_url": "https://api.github.com/users/object/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/object/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/object/subscriptions",
      "organizations_url": "https://api.github.com/users/object/orgs",
      "repos_url": "https://api.github.com/users/object/repos",
      "events_url": "https://api.github.com/users/object/events{/privacy}",
      "received_events_url": "https://api.github.com/users/object/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/5",
      "html_url": "https://github.com/fsharp/FSharp.Data/milestones/Xsd",
      "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/5/labels",
      "id": 639769,
      "number": 5,
      "title": "Xsd",
      "description": null,
      "creator": {
        "login": "ovatsus",
        "id": 738761,
        "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ovatsus",
        "html_url": "https://github.com/ovatsus",
        "followers_url": "https://api.github.com/users/ovatsus/followers",
        "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
        "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
        "organizations_url": "https://api.github.com/users/ovatsus/orgs",
        "repos_url": "https://api.github.com/users/ovatsus/repos",
        "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ovatsus/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 6,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2014-04-24T22:22:21Z",
      "updated_at": "2015-02-14T23:41:14Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2015-01-19T19:31:55Z",
    "updated_at": "2015-09-04T12:20:08Z",
    "closed_at": null,
    "body": "I can successfully build XsdProviders branch, but if I try create a provider for a test schema in Xamarin Studio F# Interactive, I get the following error:\r\n\r\n/Users/vagif/Documents/Projects/ThirdParties/FSharp.Data/tests/FSharp.Data.Tests/XsdProvider.fs(15,15): error FS3033: The type provider 'ProviderImplementation.XsdProvider' reported an error: System.Exception: Couldn't find a parent for System.Xml.Schema.XmlSchemaSimpleType\r\n  at Microsoft.FSharp.Core.ExtraTopLevelOperators+PrintFormatToStringThenFail@128-1[System.Xml.Schema.XmlSchemaAnnotated].Invoke (System.String message) [0x00000] in <filename unknown>:0 \r\n[...]\r\n\r\nIt works fine if I run it on Windows."
  },
  {
    "url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/771",
    "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/771/labels{/name}",
    "comments_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/771/comments",
    "events_url": "https://api.github.com/repos/fsharp/FSharp.Data/issues/771/events",
    "html_url": "https://github.com/fsharp/FSharp.Data/issues/771",
    "id": 53304115,
    "number": 771,
    "title": "Xsd provider requires wrapper element",
    "user": {
      "login": "nwolverson",
      "id": 2770891,
      "avatar_url": "https://avatars.githubusercontent.com/u/2770891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nwolverson",
      "html_url": "https://github.com/nwolverson",
      "followers_url": "https://api.github.com/users/nwolverson/followers",
      "following_url": "https://api.github.com/users/nwolverson/following{/other_user}",
      "gists_url": "https://api.github.com/users/nwolverson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nwolverson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nwolverson/subscriptions",
      "organizations_url": "https://api.github.com/users/nwolverson/orgs",
      "repos_url": "https://api.github.com/users/nwolverson/repos",
      "events_url": "https://api.github.com/users/nwolverson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nwolverson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/fsharp/FSharp.Data/labels/type-bug",
        "name": "type-bug",
        "color": "6E0069"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/5",
      "html_url": "https://github.com/fsharp/FSharp.Data/milestones/Xsd",
      "labels_url": "https://api.github.com/repos/fsharp/FSharp.Data/milestones/5/labels",
      "id": 639769,
      "number": 5,
      "title": "Xsd",
      "description": null,
      "creator": {
        "login": "ovatsus",
        "id": 738761,
        "avatar_url": "https://avatars.githubusercontent.com/u/738761?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ovatsus",
        "html_url": "https://github.com/ovatsus",
        "followers_url": "https://api.github.com/users/ovatsus/followers",
        "following_url": "https://api.github.com/users/ovatsus/following{/other_user}",
        "gists_url": "https://api.github.com/users/ovatsus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ovatsus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ovatsus/subscriptions",
        "organizations_url": "https://api.github.com/users/ovatsus/orgs",
        "repos_url": "https://api.github.com/users/ovatsus/repos",
        "events_url": "https://api.github.com/users/ovatsus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ovatsus/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 6,
      "closed_issues": 1,
      "state": "open",
      "created_at": "2014-04-24T22:22:21Z",
      "updated_at": "2015-02-14T23:41:14Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 1,
    "created_at": "2015-01-03T13:26:19Z",
    "updated_at": "2015-05-10T10:53:45Z",
    "closed_at": null,
    "body": "Seems like the XSD provider can't parse documents conforming to those schemas that it supports - it requires a wrapper element around those defined in the schema (tests have a top level `<schema>` element in the XML being parsed for some reason - not the schema, the actual XML document).\r\n\r\nOn top of that if the schema namespace is included it won't parse either. \r\n\r\n"
  }
]
