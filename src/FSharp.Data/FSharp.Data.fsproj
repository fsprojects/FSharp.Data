<Project>
  <!-- See https://stackoverflow.com/questions/43921992/how-can-i-use-beforebuild-and-afterbuild-targets-with-visual-studio-2017 -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <Import Project="..\..\netfx.props" />
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0; net45</TargetFrameworks>
    <OtherFlags>--warnon:1182</OtherFlags>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\Net\Http.fs" />
    <Compile Include="..\CommonRuntime\IO.fs" />
    <Compile Include="..\CommonRuntime\Caching.fs" />
    <Compile Include="..\CommonRuntime\TextConversions.fs" />
    <Compile Include="..\CommonRuntime\TextRuntime.fs" />
    <Compile Include="..\CommonRuntime\Pluralizer.fs" />
    <Compile Include="..\CommonRuntime\NameUtils.fs" />
    <Compile Include="..\CommonRuntime\StructuralTypes.fs" />
    <Compile Include="..\CommonRuntime\StructuralInference.fs" />
    <Compile Include="..\Json\JsonValue.fs" />
    <Compile Include="..\Json\JsonConversions.fs" />
    <Compile Include="..\Json\JsonExtensions.fs" />
    <Compile Include="..\Json\JsonRuntime.fs" />
    <Compile Include="..\Xml\XmlRuntime.fs" />
    <Compile Include="..\Csv\CsvRuntime.fs" />
    <Compile Include="..\Csv\CsvFile.fs" />
    <Compile Include="..\Csv\CsvExtensions.fs" />
    <Compile Include="..\Csv\CsvInference.fs" />
    <Compile Include="..\WorldBank\WorldBankRuntime.fs" />
    <Compile Include="..\Html\HtmlCharRefs.fs" />
    <Compile Include="..\Html\HtmlParser.fs" />
    <Compile Include="..\Html\HtmlOperations.fs" />
    <Compile Include="..\Html\HtmlCssSelectors.fs" />
    <Compile Include="..\Html\HtmlInference.fs" />
    <Compile Include="..\Html\HtmlRuntime.fs" />
    <Compile Include="..\Runtime.fs" />
    <Compile Include="..\AssemblyInfo.fs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="FSharp.Core" Version="4.0.0.1" Condition="'$(TargetFramework)' == 'net45'" />
    <PackageReference Include="FSharp.Core" Version="4.2.3" Condition="'$(TargetFramework)' == 'netstandard2.0'" />
    <PackageReference Include="SourceLink.Create.CommandLine" Version="2.8.0" PrivateAssets="All" /> 
    <PackageReference Include="SourceLink.Embed.PaketFiles" Version="2.8.0" PrivateAssets="all" />
    <DotNetCliToolReference Include="dotnet-sourcelink" Version="2.8.0" />
    <PackageReference Include="FSharp.Core" Version="4.3.4" Condition="'$(TargetFramework)' == 'netstandard2.0'" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <!-- We build BOTH the design-time DLLs needed to support the use of the runtime DLL in different host tooling -->
  <!-- In the future it will be possible to just build a single netstandard2.0 design-time DLL, but for fsharp41 host tooling  -->
  <!-- that is not yet possible because of https://github.com/Microsoft/visualfsharp/issues/3309. Also for legacy loading -->
  <!-- we still need a .NET 4.5 design-time DLL to place alongside the runtime DLL -->

  <!-- We place BOTH the design-time DLLs in well-known locations with resepct to the runtime DLL -->
  <!-- This enables any runtime DLL to be used with any host tooling running in either netcoreapp2.0+ or net461+ -->
  <Target Name="AfterBuild">  
    <Copy SourceFiles="$(OutputPath)\FSharp.Data.dll" DestinationFolder="..\..\bin\lib\$(TargetFramework)" />  
    <Copy SourceFiles="$(OutputPath)\FSharp.Data.pdb" DestinationFolder="..\..\bin\lib\$(TargetFramework)" />  
    <Copy SourceFiles="$(OutputPath)\FSharp.Data.xml" DestinationFolder="..\..\bin\lib\$(TargetFramework)" />  
  </Target>  
  
</Project>