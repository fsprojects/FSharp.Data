class JsonProvider
    static member AsyncGetSamples: () -> JsonProvider+Root[] async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonDocument.CreateList(t, ""))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "TwitterStream.json"), f)

    static member AsyncLoad: uri:string -> JsonProvider+Root async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonDocument.Create(t, ""))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri), f)

    static member GetSamples: () -> JsonProvider+Root[]
    JsonDocument.CreateList(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" "TwitterStream.json")), "")

    static member Load: stream:System.IO.Stream -> JsonProvider+Root
    JsonDocument.Create(((new StreamReader(stream)) :> TextReader), "")

    static member Load: reader:System.IO.TextReader -> JsonProvider+Root
    JsonDocument.Create(reader, "")

    static member Load: uri:string -> JsonProvider+Root
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false @"<SOURCE_DIRECTORY>\..\FSharp.Data.Tests\Data" "" uri)), "")

    static member Parse: text:string -> JsonProvider+Root
    JsonDocument.Create(((new StringReader(text)) :> TextReader), "")


class JsonProvider+Root : FDR.IJsonDocument
    member Contributors: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "contributors")

    member Coordinates: JsonProvider+Coordinates option with get
    JsonRuntime.TryGetPropertyPacked(this, "coordinates")

    member CreatedAt: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "created_at"))

    member Delete: JsonProvider+Delete option with get
    JsonRuntime.TryGetPropertyPacked(this, "delete")

    member Entities: JsonProvider+Entities option with get
    JsonRuntime.TryGetPropertyPacked(this, "entities")

    member Favorited: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "favorited"))

    member Geo: JsonProvider+Coordinates option with get
    JsonRuntime.TryGetPropertyPacked(this, "geo")

    member Id: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "id"))

    member IdStr: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "id_str"))

    member InReplyToScreenName: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_screen_name"))

    member InReplyToStatusId: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_status_id"))

    member InReplyToStatusIdStr: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_status_id_str"))

    member InReplyToUserId: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_user_id"))

    member InReplyToUserIdStr: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_user_id_str"))

    member Place: JsonProvider+Place option with get
    JsonRuntime.TryGetPropertyPacked(this, "place")

    member PossiblySensitive: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive"))

    member PossiblySensitiveEditable: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive_editable"))

    member RetweetCount: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "retweet_count"))

    member Retweeted: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "retweeted"))

    member RetweetedStatus: JsonProvider+RetweetedStatus option with get
    JsonRuntime.TryGetPropertyPacked(this, "retweeted_status")

    member Source: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "source"))

    member Text: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "text"))

    member Truncated: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "truncated"))

    member User: JsonProvider+User option with get
    JsonRuntime.TryGetPropertyPacked(this, "user")


class JsonProvider+Coordinates : FDR.IJsonDocument
    member Coordinates: decimal[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "coordinates"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertDecimal("", Some t.JsonValue), Some t.JsonValue)))

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "type")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Delete : FDR.IJsonDocument
    member Status: JsonProvider+Status with get
    JsonRuntime.GetPropertyPacked(this, "status")


class JsonProvider+Entities : FDR.IJsonDocument
    member Hashtags: JsonProvider+Hashtag[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "hashtags"), new Func<_,_>(id)))

    member Media: JsonProvider+Media[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "media"), new Func<_,_>(id)))

    member Urls: JsonProvider+Url[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "urls"), new Func<_,_>(id)))

    member UserMentions: JsonProvider+UserMention[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "user_mentions"), new Func<_,_>(id)))


class JsonProvider+Place : FDR.IJsonDocument
    member Attributes: JsonProvider+Attributes with get
    JsonRuntime.GetPropertyPacked(this, "attributes")

    member BoundingBox: JsonProvider+BoundingBox with get
    JsonRuntime.GetPropertyPacked(this, "bounding_box")

    member Country: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "country")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member CountryCode: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "country_code")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member FullName: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "full_name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Id: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member PlaceType: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "place_type")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+RetweetedStatus : FDR.IJsonDocument
    member Contributors: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "contributors")

    member Coordinates: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "coordinates")

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "created_at")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Entities: JsonProvider+Entities2 with get
    JsonRuntime.GetPropertyPacked(this, "entities")

    member Favorited: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "favorited")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Geo: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "geo")

    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member InReplyToScreenName: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_screen_name"))

    member InReplyToStatusId: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_status_id"))

    member InReplyToStatusIdStr: int64 option with get
    JsonRuntime.ConvertInteger64("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_status_id_str"))

    member InReplyToUserId: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_user_id"))

    member InReplyToUserIdStr: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "in_reply_to_user_id_str"))

    member Place: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "place")

    member PossiblySensitive: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive"))

    member PossiblySensitiveEditable: bool option with get
    JsonRuntime.ConvertBoolean("", JsonRuntime.TryGetPropertyUnpacked(this, "possibly_sensitive_editable"))

    member RetweetCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "retweet_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Retweeted: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "retweeted")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Source: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "source")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Text: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "text")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Truncated: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "truncated")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member User: JsonProvider+User2 with get
    JsonRuntime.GetPropertyPacked(this, "user")


class JsonProvider+User : FDR.IJsonDocument
    member ContributorsEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "contributors_enabled")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "created_at")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member DefaultProfile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "default_profile")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member DefaultProfileImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "default_profile_image")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Description: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "description"))

    member FavouritesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "favourites_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member FollowRequestSent: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "follow_request_sent")

    member FollowersCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "followers_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Following: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "following")

    member FriendsCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "friends_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member GeoEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "geo_enabled")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member IsTranslator: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "is_translator")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Lang: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "lang")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ListedCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "listed_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Location: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "location")

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Notifications: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "notifications")

    member ProfileBackgroundColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_background_color")

    member ProfileBackgroundImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_image_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileBackgroundImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_image_url_https")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileBackgroundTile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_tile")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member ProfileBannerUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "profile_banner_url"))

    member ProfileImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_image_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_image_url_https")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileLinkColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_link_color")

    member ProfileSidebarBorderColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_sidebar_border_color")

    member ProfileSidebarFillColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_sidebar_fill_color")

    member ProfileTextColor: JsonProvider+FloatOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_text_color")

    member ProfileUseBackgroundImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_use_background_image")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Protected: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "protected")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "screen_name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member StatusesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "statuses_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member TimeZone: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "time_zone"))

    member Url: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "url"))

    member UtcOffset: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "utc_offset"))

    member Verified: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "verified")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Attributes : FDR.IJsonDocument

class JsonProvider+BoundingBox : FDR.IJsonDocument
    member Coordinates: decimal[][][] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "coordinates"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.ConvertArray(t, new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertDecimal("", Some t.JsonValue), Some t.JsonValue)))))))

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "type")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Entities2 : FDR.IJsonDocument
    member Hashtags: JsonProvider+Hashtag[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "hashtags"), new Func<_,_>(id)))

    member Media: JsonProvider+Media[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "media"), new Func<_,_>(id)))

    member Urls: JsonProvider+Url[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "urls"), new Func<_,_>(id)))

    member UserMentions: JsonProvider+UserMention[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "user_mentions"), new Func<_,_>(id)))


class JsonProvider+FloatOrString : FDR.IJsonDocument
    member Number: float option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "Number", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertFloat("", "", Some t.JsonValue), Some t.JsonValue)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "String", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertString("", Some t.JsonValue), Some t.JsonValue)))


class JsonProvider+Hashtag : FDR.IJsonDocument
    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertInteger("", Some t.JsonValue), Some t.JsonValue)))

    member Text: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "text")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+IntOrString : FDR.IJsonDocument
    member Number: int option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "Number", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertInteger("", Some t.JsonValue), Some t.JsonValue)))

    member String: string option with get
    JsonRuntime.TryGetValueByTypeTag(this, "", "String", new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertString("", Some t.JsonValue), Some t.JsonValue)))


class JsonProvider+Media : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "display_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertInteger("", Some t.JsonValue), Some t.JsonValue)))

    member MediaUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "media_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member MediaUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "media_url_https")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Sizes: JsonProvider+Sizes with get
    JsonRuntime.GetPropertyPacked(this, "sizes")

    member Type: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "type")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Status : FDR.IJsonDocument
    member Id: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member IdStr: int64 with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger64("", value.JsonOpt), value.JsonOpt)

    member UserId: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "user_id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member UserIdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "user_id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Url : FDR.IJsonDocument
    member DisplayUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "display_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ExpandedUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "expanded_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertInteger("", Some t.JsonValue), Some t.JsonValue)))

    member Url: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+User2 : FDR.IJsonDocument
    member ContributorsEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "contributors_enabled")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member CreatedAt: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "created_at")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member DefaultProfile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "default_profile")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member DefaultProfileImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "default_profile_image")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Description: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "description"))

    member FavouritesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "favourites_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member FollowRequestSent: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "follow_request_sent")

    member FollowersCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "followers_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Following: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "following")

    member FriendsCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "friends_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member GeoEnabled: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "geo_enabled")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member IsTranslator: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "is_translator")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Lang: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "lang")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ListedCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "listed_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Location: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "location"))

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member Notifications: FDR.IJsonDocument with get
    JsonRuntime.GetPropertyPackedOrNull(this, "notifications")

    member ProfileBackgroundColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_background_color")

    member ProfileBackgroundImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_image_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileBackgroundImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_image_url_https")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileBackgroundTile: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_background_tile")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member ProfileBannerUrl: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "profile_banner_url"))

    member ProfileImageUrl: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_image_url")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileImageUrlHttps: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_image_url_https")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ProfileLinkColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_link_color")

    member ProfileSidebarBorderColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_sidebar_border_color")

    member ProfileSidebarFillColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_sidebar_fill_color")

    member ProfileTextColor: JsonProvider+IntOrString with get
    JsonRuntime.GetPropertyPackedOrNull(this, "profile_text_color")

    member ProfileUseBackgroundImage: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "profile_use_background_image")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member Protected: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "protected")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "screen_name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member StatusesCount: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "statuses_count")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member TimeZone: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "time_zone"))

    member Url: string option with get
    JsonRuntime.ConvertString("", JsonRuntime.TryGetPropertyUnpacked(this, "url"))

    member UtcOffset: int option with get
    JsonRuntime.ConvertInteger("", JsonRuntime.TryGetPropertyUnpacked(this, "utc_offset"))

    member Verified: bool with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "verified")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertBoolean("", value.JsonOpt), value.JsonOpt)


class JsonProvider+UserMention : FDR.IJsonDocument
    member Id: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member IdStr: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "id_str")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Indices: int[] with get
    JsonRuntime.ConvertArray(JsonRuntime.GetPropertyPackedOrNull(this, "indices"), new Func<_,_>(fun (t:IJsonDocument) -> JsonRuntime.GetNonOptionalValue(t.Path, JsonRuntime.ConvertInteger("", Some t.JsonValue), Some t.JsonValue)))

    member Name: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member ScreenName: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "screen_name")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Sizes : FDR.IJsonDocument
    member Large: JsonProvider+Large with get
    JsonRuntime.GetPropertyPacked(this, "large")

    member Medium: JsonProvider+Large with get
    JsonRuntime.GetPropertyPacked(this, "medium")

    member Small: JsonProvider+Large with get
    JsonRuntime.GetPropertyPacked(this, "small")

    member Thumb: JsonProvider+Large with get
    JsonRuntime.GetPropertyPacked(this, "thumb")


class JsonProvider+Large : FDR.IJsonDocument
    member H: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "h")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)

    member Resize: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "resize")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)

    member W: int with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "w")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertInteger("", value.JsonOpt), value.JsonOpt)


