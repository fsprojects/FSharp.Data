class XmlProvider : obj
    static member AsyncGetSamples: () -> XmlProvider+Child[] async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.CreateList(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "XML" "" "missingInnerValue.xml"), f)

    static member AsyncLoad: uri:string -> XmlProvider+Child async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.Create(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "XML" "" uri), f)

    static member GetSamples: () -> XmlProvider+Child[]
    XmlElement.CreateList(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "XML" "" "missingInnerValue.xml")))

    static member Load: stream:System.IO.Stream -> XmlProvider+Child
    XmlElement.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> XmlProvider+Child
    XmlElement.Create(reader)

    static member Load: uri:string -> XmlProvider+Child
    XmlElement.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "XML" "" uri)))

    static member Parse: text:string -> XmlProvider+Child
    XmlElement.Create(((new StringReader(text)) :> TextReader))


class XmlProvider+Child : FDR.BaseTypes.XmlElement
    new : a:int option -> b:string option -> inner:XmlProvider+Inner option -> XmlProvider+Child
    XmlRuntime.CreateRecord("child", 
                            [| ("a",
                                (a :> obj))
                               ("b",
                                (b :> obj)) |], 
                            [| ("inner",
                                (inner :> obj)) |], "")

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Child
    XmlElement.Create(xElement)

    member A: int option with get
    TextRuntime.ConvertInteger("", XmlRuntime.TryGetAttribute(this, "a"))

    member B: string option with get
    TextRuntime.ConvertString(XmlRuntime.TryGetAttribute(this, "b"))

    member Inner: XmlProvider+Inner option with get
    XmlRuntime.ConvertOptional(this, "inner", new Func<_,_>(id)))


class XmlProvider+Inner : FDR.BaseTypes.XmlElement
    new : c:string -> XmlProvider+Inner
    XmlRuntime.CreateRecord("inner", 
                            [| ("c",
                                (c :> obj)) |], 
                            [| |], "")

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+Inner
    XmlElement.Create(xElement)

    member C: string with get
    let value = XmlRuntime.TryGetAttribute(this, "c")
    TextRuntime.GetNonOptionalValue("Attribute c", TextRuntime.ConvertString(value), value)


