class JsonProvider : obj
    static member AsyncGetSample: () -> JsonProvider+Root async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonDocument.Create(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "JSON" "" "DoubleNested.json"), f)

    static member AsyncLoad: uri:string -> JsonProvider+Root async
    let f = new Func<_,_>(fun (t:TextReader) -> JsonDocument.Create(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "JSON" "" uri), f)

    static member GetSample: () -> JsonProvider+Root
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "JSON" "" "DoubleNested.json")))

    static member Load: stream:System.IO.Stream -> JsonProvider+Root
    JsonDocument.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> JsonProvider+Root
    JsonDocument.Create(reader)

    static member Load: uri:string -> JsonProvider+Root
    JsonDocument.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "JSON" "" uri)))

    static member Parse: text:string -> JsonProvider+Root
    JsonDocument.Create(((new StringReader(text)) :> TextReader))


class JsonProvider+Root : FDR.BaseTypes.IJsonDocument
    new : main:JsonProvider+Main -> JsonProvider+Root
    JsonRuntime.CreateRecord([| ("main",
                                 (main :> obj)) |], "")

    new : jsonValue:JsonValue -> JsonProvider+Root
    JsonDocument.Create(jsonValue, "")

    member Main: JsonProvider+Main with get
    JsonRuntime.GetPropertyPacked(this, "main")


class JsonProvider+Main : FDR.BaseTypes.IJsonDocument
    new : title:string -> nested:JsonProvider+Nested -> JsonProvider+Main
    JsonRuntime.CreateRecord([| ("title",
                                 (title :> obj))
                                ("nested",
                                 (nested :> obj)) |], "")

    new : jsonValue:JsonValue -> JsonProvider+Main
    JsonDocument.Create(jsonValue, "")

    member Nested: JsonProvider+Nested with get
    JsonRuntime.GetPropertyPacked(this, "nested")

    member Title: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "title")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


class JsonProvider+Nested : FDR.BaseTypes.IJsonDocument
    new : nestedTitle:string -> JsonProvider+Nested
    JsonRuntime.CreateRecord([| ("nestedTitle",
                                 (nestedTitle :> obj)) |], "")

    new : jsonValue:JsonValue -> JsonProvider+Nested
    JsonDocument.Create(jsonValue, "")

    member NestedTitle: string with get
    let value = JsonRuntime.TryGetPropertyUnpackedWithPath(this, "nestedTitle")
    JsonRuntime.GetNonOptionalValue(value.Path, JsonRuntime.ConvertString("", value.JsonOpt), value.JsonOpt)


