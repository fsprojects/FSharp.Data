class XmlProvider : obj
    static member AsyncGetSamples: () -> XmlProvider+ObjStation[] async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.CreateList(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "XML" "" "IrelandStations.xml"), f)

    static member AsyncLoad: uri:string -> XmlProvider+ObjStation async
    let f = new Func<_,_>(fun (t:TextReader) -> XmlElement.Create(t))
    TextRuntime.AsyncMap((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "XML" "" uri), f)

    static member GetSamples: () -> XmlProvider+ObjStation[]
    XmlElement.CreateList(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntimeWithDesignTimeRules "<RESOLUTION_FOLDER>" "" "XML" "" "IrelandStations.xml")))

    static member Load: stream:System.IO.Stream -> XmlProvider+ObjStation
    XmlElement.Create(((new StreamReader(stream)) :> TextReader))

    static member Load: reader:System.IO.TextReader -> XmlProvider+ObjStation
    XmlElement.Create(reader)

    static member Load: uri:string -> XmlProvider+ObjStation
    XmlElement.Create(FSharpAsync.RunSynchronously((IO.asyncReadTextAtRuntime false "<RESOLUTION_FOLDER>" "" "XML" "" uri)))

    static member Parse: text:string -> XmlProvider+ObjStation
    XmlElement.Create(((new StringReader(text)) :> TextReader))


class XmlProvider+ObjStation : FDR.BaseTypes.XmlElement
    new : stationDesc:string -> stationAlias:string option -> stationLatitude:decimal -> stationLongitude:decimal -> stationCode:string -> stationId:int -> XmlProvider+ObjStation
    XmlRuntime.CreateRecord("{http://api.irishrail.ie/realtime/}objStation", 
                            [| |], 
                            [| ("{http://api.irishrail.ie/realtime/}StationDesc",
                                (stationDesc :> obj))
                               ("{http://api.irishrail.ie/realtime/}StationAlias",
                                (stationAlias :> obj))
                               ("{http://api.irishrail.ie/realtime/}StationLatitude",
                                (stationLatitude :> obj))
                               ("{http://api.irishrail.ie/realtime/}StationLongitude",
                                (stationLongitude :> obj))
                               ("{http://api.irishrail.ie/realtime/}StationCode",
                                (stationCode :> obj))
                               ("{http://api.irishrail.ie/realtime/}StationId",
                                (stationId :> obj)) |], "")

    new : xElement:System.Xml.Linq.XElement -> XmlProvider+ObjStation
    XmlElement.Create(xElement)

    member StationAlias: string option with get
    TextRuntime.ConvertString(XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationAlias")))

    member StationCode: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationCode"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member StationDesc: string with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationDesc"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertString(value), value)

    member StationId: int with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationId"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertInteger("", value), value)

    member StationLatitude: decimal with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationLatitude"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertDecimal("", value), value)

    member StationLongitude: decimal with get
    let value = XmlRuntime.TryGetValue(XmlRuntime.GetChild(this, "{http://api.irishrail.ie/realtime/}StationLongitude"))
    TextRuntime.GetNonOptionalValue("Value", TextRuntime.ConvertDecimal("", value), value)


